
-dontobfuscate
-dontskipnonpubliclibraryclassmembers
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*,!code/allocation/variable
-optimizationpasses 5
-dontusemixedcaseclassnames
-keepattributes *Annotation*,EnclosingMethod,LineNumberTable
-dontpreverify
-verbose
-dontwarn android.support.**,org.codehaus.jackson.**,org.osmdroid.google.**,org.osmdroid.views.**


-keep class com.dropbox.**

-keep class android.app.Fragment.**

-keep public class * extends android.app.Activity

-keep public class * extends android.app.Application

-keep public class * extends android.app.Service

-keep public class * extends android.content.BroadcastReceiver

-keep public class * extends android.content.ContentProvider

-keep public class com.android.vending.licensing.ILicensingService

-keepclasseswithmembers class * {
    native <methods>;
}

-keepclasseswithmembers class * {
    public <init>(android.content.Context,android.util.AttributeSet,int);
}

-keep class * extends android.os.Parcelable {
    public static final android.os.Parcelable$Creator *;
}

-keep class android.support.v4.app.** {
    <fields>;
    <methods>;
}

-keep interface  android.support.v4.app.** {
    <fields>;
    <methods>;
}

-keep class com.actionbarsherlock.** {
    <fields>;
    <methods>;
}

-keep interface  com.actionbarsherlock.** {
    <fields>;
    <methods>;
}

-keep public class * extends android.view.View

-keep public class * extends android.view.ViewGroup

-keep public class * extends android.support.v4.app.Fragment

-keep class org.codehaus.** {
    <fields>;
    <methods>;
}

# Also keep - Enumerations. Keep the special static methods that are required in
# enumeration classes.
-keepclassmembers enum  * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-assumenosideeffects class android.util.Log {
    public static *** d(...);
    public static *** v(...);
    public static *** i(...);
}

-keepclassmembers class * implements java.io.Serializable {
    static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

-keep class com.github.mikephil.charting.** { *; }
-dontwarn io.realm.**
-keep class com.firebase.** { *; }
-keep class com.google.android.gms.** { *; }
